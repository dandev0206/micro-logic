#pragma once

#ifndef ICON_TEXTURE_VAR
#define ICON_TEXTURE_VAR icons
#endif

#include <vk2d/graphics/texture_view.h>

#define ICON_INFORMATION   ICON_TEXTURE_VAR, { 0, 0, 100, 100 }
#define ICON_MAG_GLASS     ICON_TEXTURE_VAR, { 100, 0, 100, 100 }
#define ICON_ARROW_POINTER ICON_TEXTURE_VAR, { 200, 0, 100, 100 }
#define ICON_LIBRARY       ICON_TEXTURE_VAR, { 300, 0, 100, 100 }
#define ICON_MICROCHIP     ICON_TEXTURE_VAR, { 400, 0, 100, 100 }
#define ICON_SHAPES        ICON_TEXTURE_VAR, { 500, 0, 100, 100 }
#define ICON_LABEL         ICON_TEXTURE_VAR, { 600, 0, 100, 100 }
#define ICON_COPY          ICON_TEXTURE_VAR, { 700, 0, 100, 100 }
#define ICON_CUT           ICON_TEXTURE_VAR, { 800, 0, 100, 100 }
#define ICON_TRASH_CAN     ICON_TEXTURE_VAR, { 900, 0, 100, 100 }
#define ICON_WIRE          ICON_TEXTURE_VAR, { 1000, 0, 100, 100 }
#define ICON_NET           ICON_TEXTURE_VAR, { 1100, 0, 100, 100 }
#define ICON_SPLIT_WIRE    ICON_TEXTURE_VAR, { 1200, 0, 100, 100 }

#define ICON_BOOK          ICON_TEXTURE_VAR, { 0, 100, 100, 100 }
#define ICON_ROTATE_CW     ICON_TEXTURE_VAR, { 100, 100, 100, 100 }
#define ICON_ROTATE_CCW    ICON_TEXTURE_VAR, { 200, 100, 100, 100 }
#define ICON_DIR_UP        ICON_TEXTURE_VAR, { 300, 100, 100, 100 }
#define ICON_DIR_RIGHT     ICON_TEXTURE_VAR, { 400, 100, 100, 100 }
#define ICON_DIR_DOWN      ICON_TEXTURE_VAR, { 500, 100, 100, 100 }
#define ICON_DIR_LEFT      ICON_TEXTURE_VAR, { 600, 100, 100, 100 }
#define ICON_UNDO          ICON_TEXTURE_VAR, { 700, 100, 100, 100 }
#define ICON_REDO          ICON_TEXTURE_VAR, { 800, 100, 100, 100 }
#define ICON_CARET_UP      ICON_TEXTURE_VAR, { 900, 100, 100, 100 }
#define ICON_CARET_DOWN    ICON_TEXTURE_VAR, { 1000, 100, 100, 100 }

#define ICON_MAG_PLUS      ICON_TEXTURE_VAR, { 0, 200, 100, 100 }
#define ICON_MAG_MINUS     ICON_TEXTURE_VAR, { 100, 200, 100, 100 }
#define ICON_MAG_CENTER    ICON_TEXTURE_VAR, { 200, 200, 100, 100 }
#define ICON_MAG_PIVOT     ICON_TEXTURE_VAR, { 300, 200, 100, 100 }
#define ICON_MAG_RANGE     ICON_TEXTURE_VAR, { 400, 200, 100, 100 }

#define ICON_WIRE_TYPE0    ICON_TEXTURE_VAR, { 0, 300, 100, 100 }
#define ICON_WIRE_TYPE1    ICON_TEXTURE_VAR, { 100, 300, 100, 100 }
#define ICON_WIRE_TYPE2    ICON_TEXTURE_VAR, { 200, 300, 100, 100 }
#define ICON_WIRE_TYPE3    ICON_TEXTURE_VAR, { 300, 300, 100, 100 }
#define ICON_WIRE_TYPE4    ICON_TEXTURE_VAR, { 400, 300, 100, 100 }
#define ICON_NET_TYPE0     ICON_TEXTURE_VAR, { 500, 300, 100, 100 }
#define ICON_NET_TYPE1     ICON_TEXTURE_VAR, { 600, 300, 100, 100 }
#define ICON_NET_TYPE2     ICON_TEXTURE_VAR, { 700, 300, 100, 100 }
#define ICON_NET_TYPE3     ICON_TEXTURE_VAR, { 800, 300, 100, 100 }
#define ICON_NET_TYPE4     ICON_TEXTURE_VAR, { 900, 300, 100, 100 }

#define ICON_FOLDER        ICON_TEXTURE_VAR, { 0, 400, 100, 100 }
#define ICON_SAVE          ICON_TEXTURE_VAR, { 100, 400, 100, 100 }
#define ICON_SAVE_ALL      ICON_TEXTURE_VAR, { 200, 400, 100, 100 }
#define ICON_IMPORT        ICON_TEXTURE_VAR, { 300, 400, 100, 100 }
#define ICON_EXPORT        ICON_TEXTURE_VAR, { 400, 400, 100, 100 }
#define ICON_PASTE         ICON_TEXTURE_VAR, { 500, 400, 100, 100 }
#define ICON_EXIT          ICON_TEXTURE_VAR, { 600, 400, 100, 100 }
#define ICON_WINDOW        ICON_TEXTURE_VAR, { 700, 400, 100, 100 }
#define ICON_GRID          ICON_TEXTURE_VAR, { 800, 400, 100, 100 }
#define ICON_GEAR          ICON_TEXTURE_VAR, { 900, 400, 100, 100 }
#define ICON_HISTORY       ICON_TEXTURE_VAR, { 1000, 400, 100, 100 }

#define ICON_LOADING       ICON_TEXTURE_VAR, { 0, 500, 100, 100 }
#define ICON_MESSAGE       ICON_TEXTURE_VAR, { 100, 500, 100, 100 }
#define ICON_RESIZE_TAB    ICON_TEXTURE_VAR, { 200, 500, 100, 100 }
#define ICON_CHECK         ICON_TEXTURE_VAR, { 300, 500, 100, 100 }

#define ICON_PLUS          ICON_TEXTURE_VAR, { 0, 600, 300, 100 }

#define ICON_ERROR_BIG     ICON_TEXTURE_VAR, { 0, 700, 200, 200 }
#define ICON_WARNING_BIG   ICON_TEXTURE_VAR, { 200, 700, 200, 200 }

static vk2d::TextureView& icon_to_texture_view(const vk2d::Texture& texture, const uRect& rect) 
{
	return vk2d::TextureView(texture).setRegion(rect);
}